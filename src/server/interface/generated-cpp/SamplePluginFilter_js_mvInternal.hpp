/* Autogenerated with kurento-module-creator */

#ifndef __SAMPLE_PLUGIN_FILTER_JS_MV_INTERNAL_HPP__
#define __SAMPLE_PLUGIN_FILTER_JS_MV_INTERNAL_HPP__

#include "SamplePluginFilter_js_mv.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace sampleplugin-js-mv
{

class SamplePluginFilter_js_mvMethodSetFilterType
{
public:
  SamplePluginFilter_js_mvMethodSetFilterType() {}
  ~SamplePluginFilter_js_mvMethodSetFilterType() {}

  void invoke (std::shared_ptr<SamplePluginFilter_js_mv> obj);
  void Serialize (JsonSerializer &serializer);

  int getFilterType () {
    return filterType;
  }

  void setFilterType (int filterType) {
    this->filterType = filterType;
  }

private:
  int filterType;
};

class SamplePluginFilter_js_mvMethodSetEdgeThreshold
{
public:
  SamplePluginFilter_js_mvMethodSetEdgeThreshold() {}
  ~SamplePluginFilter_js_mvMethodSetEdgeThreshold() {}

  void invoke (std::shared_ptr<SamplePluginFilter_js_mv> obj);
  void Serialize (JsonSerializer &serializer);

  int getEdgeValue () {
    return edgeValue;
  }

  void setEdgeValue (int edgeValue) {
    this->edgeValue = edgeValue;
  }

private:
  int edgeValue;
};

class SamplePluginFilter_js_mvConstructor
{
public:
  SamplePluginFilter_js_mvConstructor () {}
  ~SamplePluginFilter_js_mvConstructor () {}

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
};

} /* sampleplugin-js-mv */
} /* module */
} /* kurento */

#endif /*  __SAMPLE_PLUGIN_FILTER_JS_MV_INTERNAL_HPP__ */
