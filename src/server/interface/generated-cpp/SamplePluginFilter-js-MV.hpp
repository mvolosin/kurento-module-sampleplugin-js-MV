/* Autogenerated with kurento-module-creator */

#ifndef __SAMPLE_PLUGIN_FILTER-JS-MV_HPP__
#define __SAMPLE_PLUGIN_FILTER-JS-MV_HPP__

#include <jsoncpp/json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "Filter.hpp"

namespace kurento
{
namespace module
{
namespace sampleplugin-js-MV
{
class SamplePluginFilter-js-MV;
} /* sampleplugin-js-MV */
} /* module */
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::module::sampleplugin-js-MV::SamplePluginFilter-js-MV> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace sampleplugin-js-MV
{
class SamplePluginFilter-js-MV : public virtual Filter
{

public:
  SamplePluginFilter-js-MV () {};
  virtual ~SamplePluginFilter-js-MV () {};

  virtual void setFilterType (int filterType) = 0;
  virtual void setEdgeThreshold (int edgeValue) = 0;

  virtual std::string getType () const {
    return "SamplePluginFilter-js-MV";
  }

  virtual std::string getModule () const {
    return "sampleplugin-js-MV";
  }

  virtual void Serialize (JsonSerializer &serializer) = 0;

};

} /* sampleplugin-js-MV */
} /* module */
} /* kurento */

#endif /*  __SAMPLE_PLUGIN_FILTER-JS-MV_HPP__ */
