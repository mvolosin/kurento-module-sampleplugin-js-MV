/* Autogenerated with kurento-module-creator */

#include "SamplePluginFilter_js_mvInternal.hpp"
#include <KurentoException.hpp>
#include <jsonrpc/JsonSerializer.hpp>
#include "MediaPipeline.hpp"

namespace kurento
{
namespace module
{
namespace sampleplugin_js_mv
{

void SamplePluginFilter_js_mvMethodSetFilterType::invoke (std::shared_ptr<SamplePluginFilter_js_mv> obj)
{
  if (!obj) {
    throw KurentoException (MEDIA_OBJECT_NOT_FOUND, "Invalid object while invoking method SamplePluginFilter_js_mv::setFilterType");
  }

  return obj->setFilterType (filterType);
}

void SamplePluginFilter_js_mvMethodSetFilterType::Serialize (kurento::JsonSerializer &s)
{
  if (s.IsWriter) {
    s.SerializeNVP (filterType);

  } else {
    if (s.JsonValue.isNull ()) {
      throw KurentoException (MARSHALL_ERROR,
                              "'operationParams' is required");
    } else if (!s.JsonValue.isObject ()){
      throw KurentoException (MARSHALL_ERROR,
                              "'operationParams' should be an object");
    }

    if (!s.JsonValue.isMember ("filterType") || !s.JsonValue["filterType"].isConvertibleTo (Json::ValueType::intValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'filterType' parameter should be a integer");
    }

    s.SerializeNVP (filterType);

  }
}

void SamplePluginFilter_js_mvMethodSetEdgeThreshold::invoke (std::shared_ptr<SamplePluginFilter_js_mv> obj)
{
  if (!obj) {
    throw KurentoException (MEDIA_OBJECT_NOT_FOUND, "Invalid object while invoking method SamplePluginFilter_js_mv::setEdgeThreshold");
  }

  return obj->setEdgeThreshold (edgeValue);
}

void SamplePluginFilter_js_mvMethodSetEdgeThreshold::Serialize (kurento::JsonSerializer &s)
{
  if (s.IsWriter) {
    s.SerializeNVP (edgeValue);

  } else {
    if (s.JsonValue.isNull ()) {
      throw KurentoException (MARSHALL_ERROR,
                              "'operationParams' is required");
    } else if (!s.JsonValue.isObject ()){
      throw KurentoException (MARSHALL_ERROR,
                              "'operationParams' should be an object");
    }

    if (!s.JsonValue.isMember ("edgeValue") || !s.JsonValue["edgeValue"].isConvertibleTo (Json::ValueType::intValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'edgeValue' parameter should be a integer");
    }

    s.SerializeNVP (edgeValue);

  }
}

std::shared_ptr<MediaPipeline> SamplePluginFilter_js_mvConstructor::getMediaPipeline ()
{
  return mediaPipeline;
}

void SamplePluginFilter_js_mvConstructor::Serialize (kurento::JsonSerializer &s)
{
  if (s.IsWriter) {
    s.SerializeNVP (mediaPipeline);

  } else {
    if (s.JsonValue.isNull ()) {
      throw KurentoException (MARSHALL_ERROR,
                              "'constructorParams' is required");
    } else if (!s.JsonValue.isObject ()){
      throw KurentoException (MARSHALL_ERROR,
                              "'constructorParams' should be an object");
    }

    if (!s.JsonValue.isMember ("mediaPipeline") || !s.JsonValue["mediaPipeline"].isConvertibleTo (Json::ValueType::stringValue) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'mediaPipeline' parameter should be a string");
    }

    s.SerializeNVP (mediaPipeline);

  }
}

} /* sampleplugin_js_mv */
} /* module */
} /* kurento */
